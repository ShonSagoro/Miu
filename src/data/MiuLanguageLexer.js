// Generated from ./MiuLanguage.g4 by ANTLR 4.13.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,31,262,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,
7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,1,0,1,0,1,0,1,1,1,
1,1,2,1,2,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,6,1,6,1,6,1,7,1,7,1,8,1,
8,1,9,1,9,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,13,1,
13,1,13,1,13,1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,17,1,17,
1,17,1,17,1,18,1,18,1,18,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,3,
20,148,8,20,1,21,1,21,3,21,152,8,21,1,22,1,22,1,22,1,23,1,23,1,23,1,24,1,
24,1,24,1,25,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,28,1,29,1,29,1,29,
1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,
30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,3,30,198,8,30,1,31,1,31,1,31,1,31,
1,31,1,31,1,31,1,31,1,31,3,31,209,8,31,1,32,1,32,5,32,213,8,32,10,32,12,
32,216,9,32,1,32,1,32,1,33,1,33,1,33,1,33,1,34,4,34,225,8,34,11,34,12,34,
226,1,34,1,34,4,34,231,8,34,11,34,12,34,232,1,35,4,35,236,8,35,11,35,12,
35,237,1,36,1,36,5,36,242,8,36,10,36,12,36,245,9,36,1,37,1,37,5,37,249,8,
37,10,37,12,37,252,9,37,1,38,1,38,1,39,4,39,257,8,39,11,39,12,39,258,1,39,
1,39,0,0,40,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,0,47,0,49,0,
51,0,53,0,55,0,57,0,59,0,61,23,63,24,65,25,67,26,69,27,71,28,73,29,75,30,
77,0,79,31,1,0,7,1,0,34,34,1,0,39,39,1,0,48,57,1,0,65,90,2,0,65,90,97,122,
3,0,48,57,65,90,97,122,3,0,9,10,13,13,32,32,270,0,1,1,0,0,0,0,3,1,0,0,0,
0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,
0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,
1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,
0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,
0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,
79,1,0,0,0,1,81,1,0,0,0,3,84,1,0,0,0,5,86,1,0,0,0,7,88,1,0,0,0,9,92,1,0,
0,0,11,95,1,0,0,0,13,97,1,0,0,0,15,100,1,0,0,0,17,102,1,0,0,0,19,104,1,0,
0,0,21,106,1,0,0,0,23,108,1,0,0,0,25,115,1,0,0,0,27,117,1,0,0,0,29,121,1,
0,0,0,31,123,1,0,0,0,33,126,1,0,0,0,35,131,1,0,0,0,37,135,1,0,0,0,39,138,
1,0,0,0,41,147,1,0,0,0,43,151,1,0,0,0,45,153,1,0,0,0,47,156,1,0,0,0,49,159,
1,0,0,0,51,162,1,0,0,0,53,165,1,0,0,0,55,167,1,0,0,0,57,169,1,0,0,0,59,172,
1,0,0,0,61,197,1,0,0,0,63,208,1,0,0,0,65,210,1,0,0,0,67,219,1,0,0,0,69,224,
1,0,0,0,71,235,1,0,0,0,73,239,1,0,0,0,75,246,1,0,0,0,77,253,1,0,0,0,79,256,
1,0,0,0,81,82,5,102,0,0,82,83,5,110,0,0,83,2,1,0,0,0,84,85,5,40,0,0,85,4,
1,0,0,0,86,87,5,41,0,0,87,6,1,0,0,0,88,89,5,117,0,0,89,90,5,115,0,0,90,91,
5,101,0,0,91,8,1,0,0,0,92,93,5,58,0,0,93,94,5,58,0,0,94,10,1,0,0,0,95,96,
5,59,0,0,96,12,1,0,0,0,97,98,5,45,0,0,98,99,5,62,0,0,99,14,1,0,0,0,100,101,
5,44,0,0,101,16,1,0,0,0,102,103,5,58,0,0,103,18,1,0,0,0,104,105,5,123,0,
0,105,20,1,0,0,0,106,107,5,125,0,0,107,22,1,0,0,0,108,109,5,114,0,0,109,
110,5,101,0,0,110,111,5,116,0,0,111,112,5,117,0,0,112,113,5,114,0,0,113,
114,5,110,0,0,114,24,1,0,0,0,115,116,5,46,0,0,116,26,1,0,0,0,117,118,5,108,
0,0,118,119,5,101,0,0,119,120,5,116,0,0,120,28,1,0,0,0,121,122,5,61,0,0,
122,30,1,0,0,0,123,124,5,105,0,0,124,125,5,102,0,0,125,32,1,0,0,0,126,127,
5,101,0,0,127,128,5,108,0,0,128,129,5,115,0,0,129,130,5,101,0,0,130,34,1,
0,0,0,131,132,5,102,0,0,132,133,5,111,0,0,133,134,5,114,0,0,134,36,1,0,0,
0,135,136,5,105,0,0,136,137,5,110,0,0,137,38,1,0,0,0,138,139,5,46,0,0,139,
140,5,46,0,0,140,40,1,0,0,0,141,148,3,45,22,0,142,148,3,51,25,0,143,148,
3,53,26,0,144,148,3,55,27,0,145,148,3,57,28,0,146,148,3,59,29,0,147,141,
1,0,0,0,147,142,1,0,0,0,147,143,1,0,0,0,147,144,1,0,0,0,147,145,1,0,0,0,
147,146,1,0,0,0,148,42,1,0,0,0,149,152,3,47,23,0,150,152,3,49,24,0,151,149,
1,0,0,0,151,150,1,0,0,0,152,44,1,0,0,0,153,154,5,61,0,0,154,155,5,61,0,0,
155,46,1,0,0,0,156,157,5,38,0,0,157,158,5,38,0,0,158,48,1,0,0,0,159,160,
5,124,0,0,160,161,5,124,0,0,161,50,1,0,0,0,162,163,5,33,0,0,163,164,5,61,
0,0,164,52,1,0,0,0,165,166,5,62,0,0,166,54,1,0,0,0,167,168,5,60,0,0,168,
56,1,0,0,0,169,170,5,62,0,0,170,171,5,61,0,0,171,58,1,0,0,0,172,173,5,60,
0,0,173,174,5,61,0,0,174,60,1,0,0,0,175,176,5,105,0,0,176,177,5,110,0,0,
177,198,5,116,0,0,178,179,5,102,0,0,179,180,5,108,0,0,180,181,5,111,0,0,
181,182,5,97,0,0,182,198,5,116,0,0,183,184,5,98,0,0,184,185,5,111,0,0,185,
186,5,111,0,0,186,198,5,108,0,0,187,188,5,115,0,0,188,189,5,116,0,0,189,
190,5,114,0,0,190,191,5,105,0,0,191,192,5,110,0,0,192,198,5,103,0,0,193,
194,5,99,0,0,194,195,5,104,0,0,195,196,5,97,0,0,196,198,5,114,0,0,197,175,
1,0,0,0,197,178,1,0,0,0,197,183,1,0,0,0,197,187,1,0,0,0,197,193,1,0,0,0,
198,62,1,0,0,0,199,200,5,116,0,0,200,201,5,114,0,0,201,202,5,117,0,0,202,
209,5,101,0,0,203,204,5,102,0,0,204,205,5,97,0,0,205,206,5,108,0,0,206,207,
5,115,0,0,207,209,5,101,0,0,208,199,1,0,0,0,208,203,1,0,0,0,209,64,1,0,0,
0,210,214,5,34,0,0,211,213,8,0,0,0,212,211,1,0,0,0,213,216,1,0,0,0,214,212,
1,0,0,0,214,215,1,0,0,0,215,217,1,0,0,0,216,214,1,0,0,0,217,218,5,34,0,0,
218,66,1,0,0,0,219,220,5,39,0,0,220,221,8,1,0,0,221,222,5,39,0,0,222,68,
1,0,0,0,223,225,7,2,0,0,224,223,1,0,0,0,225,226,1,0,0,0,226,224,1,0,0,0,
226,227,1,0,0,0,227,228,1,0,0,0,228,230,5,46,0,0,229,231,7,2,0,0,230,229,
1,0,0,0,231,232,1,0,0,0,232,230,1,0,0,0,232,233,1,0,0,0,233,70,1,0,0,0,234,
236,7,2,0,0,235,234,1,0,0,0,236,237,1,0,0,0,237,235,1,0,0,0,237,238,1,0,
0,0,238,72,1,0,0,0,239,243,7,3,0,0,240,242,3,77,38,0,241,240,1,0,0,0,242,
245,1,0,0,0,243,241,1,0,0,0,243,244,1,0,0,0,244,74,1,0,0,0,245,243,1,0,0,
0,246,250,7,4,0,0,247,249,3,77,38,0,248,247,1,0,0,0,249,252,1,0,0,0,250,
248,1,0,0,0,250,251,1,0,0,0,251,76,1,0,0,0,252,250,1,0,0,0,253,254,7,5,0,
0,254,78,1,0,0,0,255,257,7,6,0,0,256,255,1,0,0,0,257,258,1,0,0,0,258,256,
1,0,0,0,258,259,1,0,0,0,259,260,1,0,0,0,260,261,6,39,0,0,261,80,1,0,0,0,
12,0,147,151,197,208,214,226,232,237,243,250,258,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class MiuLanguageLexer extends antlr4.Lexer {

    static grammarFileName = "MiuLanguage.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'fn'", "'('", "')'", "'use'", "'::'", "';'", 
                         "'->'", "','", "':'", "'{'", "'}'", "'return'", 
                         "'.'", "'let'", "'='", "'if'", "'else'", "'for'", 
                         "'in'", "'..'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, null, null, null, 
                          null, null, null, null, null, "COMPARISON_OPERATOR", 
                          "ADD_OPERATOR", "TYPE", "BOOL", "STRING", "CHAR", 
                          "FLOAT", "INT", "IDF", "ID", "WS" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", 
                      "T__13", "T__14", "T__15", "T__16", "T__17", "T__18", 
                      "T__19", "COMPARISON_OPERATOR", "ADD_OPERATOR", "EQ", 
                      "AND", "OR", "NEQ", "GT", "LT", "GTEQ", "LTEQ", "TYPE", 
                      "BOOL", "STRING", "CHAR", "FLOAT", "INT", "IDF", "ID", 
                      "IDN", "WS" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

MiuLanguageLexer.EOF = antlr4.Token.EOF;
MiuLanguageLexer.T__0 = 1;
MiuLanguageLexer.T__1 = 2;
MiuLanguageLexer.T__2 = 3;
MiuLanguageLexer.T__3 = 4;
MiuLanguageLexer.T__4 = 5;
MiuLanguageLexer.T__5 = 6;
MiuLanguageLexer.T__6 = 7;
MiuLanguageLexer.T__7 = 8;
MiuLanguageLexer.T__8 = 9;
MiuLanguageLexer.T__9 = 10;
MiuLanguageLexer.T__10 = 11;
MiuLanguageLexer.T__11 = 12;
MiuLanguageLexer.T__12 = 13;
MiuLanguageLexer.T__13 = 14;
MiuLanguageLexer.T__14 = 15;
MiuLanguageLexer.T__15 = 16;
MiuLanguageLexer.T__16 = 17;
MiuLanguageLexer.T__17 = 18;
MiuLanguageLexer.T__18 = 19;
MiuLanguageLexer.T__19 = 20;
MiuLanguageLexer.COMPARISON_OPERATOR = 21;
MiuLanguageLexer.ADD_OPERATOR = 22;
MiuLanguageLexer.TYPE = 23;
MiuLanguageLexer.BOOL = 24;
MiuLanguageLexer.STRING = 25;
MiuLanguageLexer.CHAR = 26;
MiuLanguageLexer.FLOAT = 27;
MiuLanguageLexer.INT = 28;
MiuLanguageLexer.IDF = 29;
MiuLanguageLexer.ID = 30;
MiuLanguageLexer.WS = 31;



